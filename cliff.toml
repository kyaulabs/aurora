# git-cliff ~ kyaulabs configuration file
# https://git-cliff.org/docs/configuration
#
# Configuration options are organized into tables and keys.
# See documentation for more information on available options.

[changelog]
# changelog header
header = """
# 📜 Changelog\n
All notable changes to this project will be documented in this file.\\
See [Conventional Commits](https://conventionalcommits.org) for commit guidelines
and [Semantic Versioning](https://semver.org/spec/v2.0.0.html) for versioning adherance.
"""
# template for the changelog body
# https://tera.netlify.app/docs
body = """
{% if previous %}\
    {% if previous.commit_id %}
        {% if version %}\
            ## [💾](https://github.com/kyaulabs/aurora/releases/tag/{{ version }}) [{{ version | trim_start_matches(pat="v") }}](https://github.com/kyaulabs/aurora/compare/{{ previous.version }}...{{ version }}) - ({{ timestamp | date(format="%Y-%m-%d") }})
        {% else %}\
            ## [unreleased]
        {% endif %}\
    {% else %}
        {% if version %}\
            ## [💾](https://github.com/kyaulabs/aurora/releases/tag/{{ version }}) [{{ version | trim_start_matches(pat="v") }}](https://github.com/kyaulabs/aurora/commit/{{ commit_id }}) - ({{ timestamp | date(format="%Y-%m-%d") }})
        {% else %}\
            ## [unreleased]
        {% endif %}\
    {% endif %}\
{% endif %}\
{% for group, commits in commits | sort(attribute="group") | group_by(attribute="group") %}
    ### {{ group | upper_first }}
    {% for commit in commits
    | filter(attribute="scope")
    | sort(attribute="scope") %}
        - [{{ commit.scope | upper_first }}] {{ commit.message | upper_first  }} ([{{ commit.id | truncate(length=7, end="") }}](https://github.com/kyaulabs/aurora/commit/{{ commit.id }}))
        {%- if commit.breaking %}
        {% raw %}  {% endraw %}- 💥 **BREAKING**: {{ commit.breaking_description }}
        {%- endif -%}
    {%- endfor -%}
    {%- for commit in commits %}
        {%- if commit.scope -%}
        {% else -%}
            - {{ commit.message | upper_first  }} ([{{ commit.id | truncate(length=7, end="") }}](https://github.com/kyaulabs/aurora/commit/{{ commit.id }}))
            {% if commit.breaking -%}
            {% raw %}  {% endraw %}- 💥 **BREAKING**: {{ commit.breaking_description }}
            {% endif -%}
        {% endif -%}
    {% endfor -%}
    {% raw %}\n{% endraw %}\
{% endfor %}<!-- Auto-generated on {{ now() | date(format="%+") }} -->\n
"""
# remove the leading and trailing whitespace from the template
trim = true
# changelog footer
footer = """
"""

[git]
# parse the commits based on https://www.conventionalcommits.org
conventional_commits = true
# filter out the commits that are not conventional
filter_unconventional = true
# process each line of a commit as an individual commit
split_commits = false
# regex for preprocessing the commit messages
commit_preprocessors = [
  # { pattern = '\((\w+\s)?#([0-9]+)\)', replace = "([#${2}](https://github.com/kyaulabs/aurora/issues/${2}))"}, # replace issue/pr numbers
]
link_parsers = [
  { pattern = "#(\\d+)", href = "https://github.com/kyaulabs/aurora/issues/$1" }, # replace issue/pr numbers
  { pattern = "RFC(\\d+)", text = "ietf-rfc$1", href = "https://datatracker.ietf.org/doc/html/rfc$1" }, # replace ietf-rfcs
]
# regex for parsing and grouping commits
commit_parsers = [
  { message = "^feat|^patch", group = "🚀 Features" },
  { message = "^fix", group = "🐛 Bug Fixes" },
  { message = "^doc", group = "📝 Documentation" },
  { message = "^perf", group = "⚡️ Performance" },
  { message = "^refactor", group = "♻️ Refactor" },
  { message = "^style", group = "💄 Styling" },
  { message = "^test", group = "⚗️ Testing" },
  { message = "^ci", group = "👷 CI/CD" },
  { message = "^chore\\(release\\):", skip = true },
  { message = "^chore", group = "🔮 Misc" },
  { message = "^ignore", skip = true },
  { body = ".*security", group = "🔒️ Security" },
]
# protect breaking changes from being skipped due to matching a skipping commit_parser
protect_breaking_commits = false
# filter out the commits that are not matched by commit parsers
filter_commits = false
# glob pattern for matching git tags
tag_pattern = "v[0-9]*"
# regex for skipping tags
skip_tags = "v0.0.1-alpha"
# regex for ignoring tags
ignore_tags = ""
# sort the tags topologically
topo_order = false
# sort the commits inside sections by oldest/newest order
sort_commits = "oldest"
# limit the number of commits included in the changelog.
# limit_commits = 42
